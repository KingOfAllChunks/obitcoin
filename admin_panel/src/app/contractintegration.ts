import { Injectable } from '@angular/core';

import { Member } from './member';
import { Pool } from './pool';
import { Vote } from './vote';

declare var web3: any;

@Injectable()

export class contractintegration{
	accounts: any[];
	account: any;
	contractAbi: any;
	contractCompiled: any;
	contractGas: any;
	connected: any;
	initialized: any;
	lastBlockNumber: any;
	self: any;

	events: any;

	Obitcoin: any;

	constructor(){
		this.accounts = [];
		this.account = "";

		this.contractAbi = [{"constant":true,"inputs":[],"name":"getVotesLength","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"voteIndex","type":"uint16"}],"name":"getVote","outputs":[{"name":"","type":"uint8"},{"name":"","type":"uint16"},{"name":"","type":"uint16[]"},{"name":"","type":"int256[]"},{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"voted","type":"bool[]"},{"name":"poolMembers","type":"uint16[]"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"pool","type":"uint16"}],"name":"getPool","outputs":[{"name":"","type":"bytes16[3]"},{"name":"","type":"uint16[]"},{"name":"","type":"uint128[3][]"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getContractAddress","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getPublishingBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"member","type":"uint16"},{"name":"name","type":"bytes32"},{"name":"adr","type":"address"},{"name":"isAdmin","type":"bool"}],"name":"updateMember","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getPools","outputs":[{"name":"","type":"uint16[]"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"pool","type":"uint16"},{"name":"toMembers","type":"uint16[]"},{"name":"amount","type":"int256[]"}],"name":"sendTokens","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getMembers","outputs":[{"name":"","type":"uint16[]"},{"name":"","type":"bytes32[]"},{"name":"","type":"address[]"},{"name":"","type":"uint8[]"},{"name":"","type":"uint16[]"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"to","type":"uint16"}],"name":"delegateVote","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"pool","type":"uint16"},{"name":"name","type":"bytes16"},{"name":"legalContract","type":"bytes16"},{"name":"financialReports","type":"bytes16"}],"name":"updateDebtPool","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"voteIndex","type":"uint16"},{"name":"voteFor","type":"bool"}],"name":"vote","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"init","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"pool","type":"uint16"},{"name":"amount","type":"uint128"}],"name":"buyTokens","outputs":[],"payable":false,"type":"function"},{"inputs":[],"payable":false,"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"to","type":"uint16"},{"indexed":true,"name":"pool","type":"uint16"},{"indexed":false,"name":"amount","type":"int256"},{"indexed":false,"name":"time","type":"uint256"}],"name":"TokenTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"to","type":"uint16"},{"indexed":true,"name":"pool","type":"uint16"},{"indexed":false,"name":"amount","type":"uint128"},{"indexed":false,"name":"time","type":"uint256"}],"name":"MoneyTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"to","type":"uint16"},{"indexed":true,"name":"pool","type":"uint16"},{"indexed":false,"name":"amount","type":"int256"},{"indexed":false,"name":"time","type":"uint256"}],"name":"SliceTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"pool","type":"uint16"},{"indexed":false,"name":"amount","type":"uint128"},{"indexed":false,"name":"time","type":"uint256"}],"name":"TokenPurchase","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"pool","type":"uint16"},{"indexed":false,"name":"added","type":"bool"},{"indexed":false,"name":"time","type":"uint256"}],"name":"PoolChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"fromAddress","type":"address"},{"indexed":false,"name":"time","type":"uint256"}],"name":"UnauthorizedAccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"to","type":"uint16"},{"indexed":false,"name":"added","type":"bool"},{"indexed":false,"name":"time","type":"uint256"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"to","type":"uint16"},{"indexed":false,"name":"added","type":"bool"},{"indexed":false,"name":"time","type":"uint256"}],"name":"PersonChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"voteIndex","type":"uint16"},{"indexed":false,"name":"pool","type":"uint16"},{"indexed":false,"name":"voteState","type":"uint8"},{"indexed":false,"name":"time","type":"uint256"}],"name":"VoteChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"voteIndex","type":"uint16"},{"indexed":false,"name":"pool","type":"uint16"},{"indexed":false,"name":"vote","type":"bool"},{"indexed":false,"name":"time","type":"uint256"}],"name":"Voted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"to","type":"uint16"},{"indexed":false,"name":"time","type":"uint256"}],"name":"Delegation","type":"event"}];

		this.contractCompiled = '6060604052341561000c57fe5b5b60008054600160a060020a03191633600160a060020a031617905543600955600880546201000061ffff1990911660011763ffff000019161790555b5b614261806100596000396000f300606060405236156100b45763ffffffff60e060020a600035041663267e652981146100b6578063279be9dd146100d85780632ce126691461029357806332a2c5d0146103a0578063438a5f13146103cc57806357091c81146103ee578063673a2a1f1461041b5780636ccd5bb0146104865780639eab525314610515578063cddcf3f2146106be578063cee11e96146106d7578063d738d4b314610709578063e1c7392a14610727578063f3fa89df14610739575bfe5b34156100be57fe5b6100c661075e565b60408051918252519081900360200190f35b34156100e057fe5b6100ef61ffff60043516610765565b604051808c60028111156100ff57fe5b60ff16815261ffff808d166020830152891660808201526040810190606081019060a00189600281111561012f57fe5b60ff168152602001888152602001878152602001868152602001806020018060200185810385528e818151815260200191508051906020019060200280838360008314610197575b80518252602083111561019757601f199092019160209182019101610177565b50505090500185810384528d8181518152602001915080519060200190602002808383600083146101e3575b8051825260208311156101e357601f1990920191602091820191016101c3565b50505091909101868103845288518152885160209182019250818a019102808383821561022b575b80518252602083111561022b57601f19909201916020918201910161020b565b5050509190910186810383528751815287516020918201925081890191028083838215610273575b80518252602083111561027357601f199092019160209182019101610253565b5050509050019f5050505050505050505050505050505060405180910390f35b341561029b57fe5b6102aa61ffff60043516610aca565b604051808460608083835b8051825260208311156102d557601f1990920191602091820191016102b5565b5050509050018060200180602001838103835285818151815260200191508051906020019060200280838360008314610329575b80518252602083111561032957601f199092019160209182019101610309565b5050509050018381038252848181518152602001915080516000925b8184101561038c5760208085028401015160608083835b80518252602083111561037c57601f19909201916020918201910161035c565b5050509050019260010192610345565b925050509550505050505060405180910390f35b34156103a857fe5b6103b0610dd5565b60408051600160a060020a039092168252519081900360200190f35b34156103d457fe5b6100c6610dda565b60408051918252519081900360200190f35b34156103f657fe5b61041961ffff60043516602435600160a060020a03604435166064351515610de1565b005b341561042357fe5b61042b611231565b6040805160208082528351818301528351919283929083019185810191028083838215610473575b80518252602083111561047357601f199092019160209182019101610453565b5050509050019250505060405180910390f35b341561048e57fe5b6040805160248035600481810135602081810286810182019097528186526104199661ffff84351696939560449501929182919085019084908082843750506040805187358901803560208181028481018201909552818452989a9989019892975090820195509350839250850190849080828437509496506112b895505050505050565b005b341561051d57fe5b6105256115d3565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019060200280838360008314610583575b80518252602083111561058357601f199092019160209182019101610563565b5050509190910187810386528b5181528b5160209182019250818d01910280838382156105cb575b8051825260208311156105cb57601f1990920191602091820191016105ab565b5050509190910187810385528a5181528a5160209182019250818c0191028083838215610613575b80518252602083111561061357601f1990920191602091820191016105f3565b50505091909101878103845289518152895160209182019250818b019102808383821561065b575b80518252602083111561065b57601f19909201916020918201910161063b565b50505091909101878103835288518152885160209182019250818a01910280838382156106a3575b8051825260208311156106a357601f199092019160209182019101610683565b5050509050019a505050505050505050505060405180910390f35b34156106c657fe5b61041961ffff60043516611973565b005b34156106df57fe5b61041961ffff600435166001608060020a031960243581169060443581169060643516611c80565b005b341561071157fe5b61041961ffff600435166024351515611e8a565b005b341561072f57fe5b6104196126e1565b005b341561074157fe5b61041961ffff600435166001608060020a0360243516612a1a565b005b6001545b90565b60006000610771613e88565b610779613e88565b6000600060006000600061078b613e88565b610793613e88565b6000600060018e61ffff168154811015156107aa57fe5b906000526020600020906008020160005b50805462010000900461ffff1660009081526005602052604090819020600201549051919350908059106107ec5750595b908082528060200260200182016040525b509350600090505b815461ffff62010000909104811660009081526005602052604090206002015490821610156108ca57815461ffff62010000909104811660009081526005602081905260408220600201805491860193909190851690811061086357fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a900481168252602082019290925260400160002054855160ff9091169186919084169081106108b257fe5b9115156020928302909101909101525b600101610805565b8160000160019054906101000a900460ff168260000160029054906101000a900461ffff1683600101846002018560060160009054906101000a900461ffff168660060160029054906101000a900460ff168760070154886003015489600401548c600560008d60000160029054906101000a900461ffff1661ffff1661ffff168152602001908152602001600020600201888054806020026020016040519081016040528092919081815260200182805480156109cf57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116109965790505b5050505050985087805480602002602001604051908101604052809291908181526020018280548015610a2157602002820191906000526020600020905b815481526020019060010190808311610a0d575b5050505050975080805480602002602001604051908101604052809291908181526020018280548015610a9b57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff1681526020019060020190602082600101049283019260010382029150808411610a625790505b505050505090509c509c509c509c509c509c509c509c509c509c509c505b505091939597999b90929496989a50565b610ad2613ebe565b610ada613e88565b610ae2613e88565b610aea613ebe565b610af2613e88565b61ffff861660009081526005602052604081206006015460ff161515610b1757610000565b61ffff871660009081526005602052604090819020600201549051805910610b3c5750595b908082528060200260200182016040528015610b7257816020015b610b5f613ebe565b815260200190600190039081610b575790505b5061ffff8816600090815260056020526040812054919350608060020a9091029084905b6001608060020a03199092166020928302919091015261ffff8816600090815260059091526040902054608060020a90819004028360015b6001608060020a03199092166020928302919091015261ffff8816600090815260059091526040902060010154608060020a028360025b6001608060020a031990921660209290920201525060005b61ffff8088166000908152600560205260409020600201549082161015610d2a5761ffff80881660009081526005602052604081206002810180546003909201939091908516908110610c6c57fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a90041681526020810191909152604090810160002081516060810190925260038282826020028201916000905b82829054906101000a90046001608060020a03166001608060020a031681526020019060100190602082600f01049283019260010382029150808411610cbd5790505b5050505050828261ffff16815181101515610d1757fe5b602090810290910101525b600101610c1d565b82600560008961ffff1661ffff1681526020019081526020016000206002018381805480602002602001604051908101604052809291908181526020018280548015610dbd57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff1681526020019060020190602082600101049283019260010382029150808411610d845790505b505050505091509550955095505b5050509193909250565b305b90565b6009545b90565b60006002805b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff1690811115610e2a57fe5b106111e65761ffff861615801590610e60575061ffff861660009081526003602052604090206001015460a860020a900460ff16155b15610e6a57610000565b61ffff861615801590610eab575060035b61ffff871660009081526003602081905260409091206001015460a060020a900460ff1690811115610ea957fe5b145b15610eb557610000565b600160a060020a03841660009081526007602052604090205461ffff878116911614801590610eff5750600160a060020a03841660009081526007602052604090205461ffff1615155b15610f0957610000565b61ffff86161591508115610f7d576008805461ffff198116600161ffff9283168181019093169190911790925560048054919850918101610f4a8382613f22565b91600052602060002090601091828204019190066002025b815461ffff808b166101009390930a92830292021916179055505b61ffff8616600090815260036020526040902060010154600160a060020a03858116911614610ff45761ffff8616600081815260036020908152604080832060010154600160a060020a0390811684526007909252808320805461ffff199081169091559188168352909120805490911690911790555b82151560025b61ffff881660009081526003602081905260409091206001015460a060020a900460ff169081111561102857fe5b141461109057600160a060020a03331660009081526007602090815260409182902054825186151581524292810192909252825161ffff808b16949216927f955f9cd413b1613b572ff1877b25ae515763d2a51d926bd21ba78d8ec4f16c3c92908290030190a35b60408051608081018252868152600160a060020a0386166020820152908101846110bb5760016110be565b60025b60038111156110c957fe5b81526001602091820181905261ffff8916600090815260038084526040918290208551815593850151928401805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039094169390931780845591850151929160a060020a60ff0219169060a060020a90849081111561114257fe5b0217905550606091909101516001909101805491151560a860020a0275ff00000000000000000000000000000000000000000019909216919091179055600160a060020a03331660009081526007602090815260409182902054825185151581524292810192909252825161ffff808b16949216927f7107c2ae9754688147920c7dbf25c81ed808624042d38439123c6da5fe34beb492908290030190a35b611229565b600160a060020a033316600081815260076020908152604091829020548251428152925161ffff909116926000805160206141f683398151915292908290030190a35b505050505050565b611239613e88565b60068054806020026020016040519081016040528092919081815260200182805480156112ad57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116112745790505b505050505090505b90565b6000806003805b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff169081111561130257fe5b106111e6578451158061131457508351155b8061132157508451845114155b1561132b57610000565b61ffff861660009081526005602052604090206006015460ff16151561135057610000565b600092505b84518361ffff1610156113e157838361ffff1681518110151561137457fe5b90602001906020020151600014806113cb575060036000868561ffff1681518110151561139d57fe5b602090810290910181015161ffff1682528101919091526040016000206001015460ff60a860020a90910416155b156113d557610000565b5b600190920191611355565b61ffff8616600090815260056020526040902060020154151561140e576114098686866138fd565b6111e1565b600180549061141f90828101613f5c565b5060018054600019810190811061143257fe5b906000526020600020906008020160005b50805460ff1916600190811780835591935090839061ff001916610100835b02179055506006820180546000919062ff0000191662010000835b0217905550600160a060020a03331660009081526007602081815260409092205460068501805461ffff191661ffff90921691909117905562093a8042019084015585516114d391600185019190880190613f8e565b50815463ffff000019166201000061ffff88160217825583516114ff9060028401906020870190614037565b506001546006830154835460405161ffff62010000928390048116808352600019909501811694908416937f716894e2a949e79640a4695695c3c281859348dd862e6ecadede2911af42c67193919291900460ff169042906020810183600281111561156757fe5b60ff168152602001828152602001935050505060405180910390a35b611229565b600160a060020a033316600081815260076020908152604091829020548251428152925161ffff909116926000805160206141f683398151915292908290030190a35b505050505050565b6115db613e88565b6115e3613e88565b6115eb613e88565b6115f3613e88565b6115fb613e88565b611603613e88565b61160b613e88565b611613613e88565b61161b613e88565b6004546040516000919080591061162f5750595b908082528060200260200182016040525b50600454604051919650908059106116555750595b908082528060200260200182016040525b506004546040519195509080591061167b5750595b908082528060200260200182016040525b50600454604051919450908059106116a15750595b908082528060200260200182016040525b509150600090505b60045461ffff821610156118dc576003600060048361ffff168154811015156116df57fe5b90600052602060002090601091828204019190066002025b9054906101000a900461ffff1661ffff1661ffff16815260200190815260200160002060000154858261ffff1681518110151561173057fe5b602090810290910101526004805460039160009161ffff851690811061175257fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a9004811682526020820192909252604001600020600101548551600160a060020a039091169186919084169081106117aa57fe5b600160a060020a039092166020928302909101909101526004805460039160009161ffff85169081106117d957fe5b90600052602060002090601091828204019190066002025b9054906101000a900461ffff1661ffff1661ffff16815260200190815260200160002060010160149054906101000a900460ff16838261ffff1681518110151561183757fe5b90602001906020020190600381111561184c57fe5b9081600381111561185957fe5b815250506002600060048361ffff1681548110151561187457fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a90048116825260208201929092526040016000205483519082169184919084169081106118c157fe5b61ffff9092166020928302909101909101525b6001016116ba565b6004858585858480548060200260200160405190810160405280929190818152602001828054801561195557602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161191c5790505b50505050509450995099509950995099505b50505050509091929394565b6000806001805b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff16908111156119bd57fe5b10611c3757600160a060020a03331660009081526007602090815260408083205461ffff8881168552600290935292205491811694501615611a295761ffff8085166000908152600260205260408082205486841683529120805461ffff191691909216179055611a4e565b61ffff8381166000908152600260205260409020805461ffff19169186169190911790555b61ffff8084166000818152600260205260409020549091161415611a7157610000565b61ffff80841660008181526002602090815260409182902054825142815292519416937fc382e5570138bb87167aab679b40be8824dfa2578aec7293eab918dd2a3f217d9281900390910190a3600091505b600454821015611c31578261ffff1660026000600485815481101515611ae557fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a900481168252602082019290925260400160002054161415611c255761ffff80841660009081526002602081905260408220546004805491909416939192919086908110611b5357fe5b90600052602060002090601091828204019190066002025b90546101009190910a900461ffff908116825260208083019390935260409182016000908120805461ffff19169583169590951790945586811684526002909252909120546004805491909216919084908110611bc457fe5b90600052602060002090601091828204019190066002025b9054906101000a900461ffff1661ffff167fc382e5570138bb87167aab679b40be8824dfa2578aec7293eab918dd2a3f217d426040518082815260200191505060405180910390a35b5b600190910190611ac3565b5b611c7a565b600160a060020a033316600081815260076020908152604091829020548251428152925161ffff909116926000805160206141f683398151915292908290030190a35b50505050565b60006002805b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff1690811115611cc957fe5b106111e65761ffff861615801590611cf8575061ffff861660009081526005602052604090206006015460ff16155b15611d0257610000565b61ffff86161591508115611d805760088054600161ffff6201000080840482168381019092160263ffff0000199093169290921790925560068054919850918101611d4d8382613f22565b91600052602060002090601091828204019190066002025b815461ffff808b166101009390930a92830292021916179055505b61ffff80871660008181526005602090815260408083208054608060020a808c048102818e046001608060020a0319938416176001608060020a031617835560018084018054928d0492909316919091179091556006909101805460ff19169091179055600160a060020a03331683526007825291829020548251871515815242928101929092528251939416927f1f6540b99f70a62641d39a080ec69b8a1442f4a4019da09b6bb25ae3d7d7621c929181900390910190a35b611229565b600160a060020a033316600081815260076020908152604091829020548251428152925161ffff909116926000805160206141f683398151915292908290030190a35b505050505050565b6000600060006000600060018761ffff16815481101515611ea757fe5b906000526020600020906008020160005b505462010000900461ffff1660005b61ffff808316600090815260056020526040902060020154908216101561269357600160a060020a03331660009081526007602090815260408083205461ffff86811685526005909352922060020180549282169290918416908110611f2957fe5b90600052602060002090601091828204019190066002025b9054906101000a900461ffff1661ffff16141561268a576001805461ffff8b16908110611f6a57fe5b906000526020600020906008020160005b50805461ffff6201000090910481166000908152600560208181526040808420600160a060020a0333168552600783528185205490951680855292860190915290912054929950909750955060ff1680611fef575060005b600688015462010000900460ff166002811115611fec57fe5b14155b15611ff957610000565b61ffff8086166000908152600260205260409020541615801590612033575061ffff80861660008181526002602052604090205490911614155b1561203d57610000565b61ffff851660009081526005880160209081526040808320805460ff19166001179055600389019091528120905b600291828204019190066010025b9054600160a060020a033316600090815260076020908152604091829020548b5483516201000090910461ffff90811682528e151593820193909352428185015292516001608060020a036101009690960a909404949094169750808d169316917f935e1ae8eb2b516cef31e554545cf80875084a5190ed424c1bc748ab1de20c989181900360600190a3600092505b6002860154831015612381578461ffff1660026000886002018681548110151561212f57fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a900481168252602082019290925260400160002054161480156121b357508461ffff16866002018481548110151561218757fe5b90600052602060002090601091828204019190066002025b9054906101000a900461ffff1661ffff1614155b156123755786600501600087600201858154811015156121cf57fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a900416815260208101919091526040016000205460ff161561221457612375565b856003016000876002018581548110151561222b57fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a900416815260208101919091526040016000908120905b600291828204019190066010025b9054906101000a90046001608060020a031684019350600187600501600088600201868154811015156122a357fe5b90600052602060002090601091828204019190066002025b90546101009190910a900461ffff90811682526020820192909252604001600020805460ff191692151592909217909155600287018054918b16918590811061230057fe5b90600052602060002090601091828204019190066002025b905489546040805161ffff62010000909304831681528d15156020820152428183015290516101009490940a90920416917f935e1ae8eb2b516cef31e554545cf80875084a5190ed424c1bc748ab1de20c98916060908290030190a35b5b600190920191612109565b8715612588576003870180546001608060020a03861601905560026004870160005b600291828204019190066010025b9054906101000a90046001608060020a03166001608060020a03168115156123d557fe5b046001016001608060020a03168760030154101515612583576006870180546001919062ff0000191662010000835b021790555060015b8754610100900460ff16600281111561242157fe5b1415612509578654600188018054604080516020808402820181019092528281526125099462010000900461ffff1693909290918301828280156124ac57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116124735790505b5050505050896002018054806020026020016040519081016040528092919081815260200182805480156124ff57602002820191906000526020600020905b8154815260200190600101908083116124eb575b50505050506138fd565b5b6006870154875460405161ffff620100009283900481168083528d821694918216937f716894e2a949e79640a4695695c3c281859348dd862e6ecadede2911af42c6719391920460ff169042906020810183600281111561256757fe5b60ff168152602001828152602001935050505060405180910390a35b612683565b600480880180546001608060020a038716019055600290870160005b600291828204019190066010025b9054906101000a90046001608060020a03166001608060020a03168115156125d657fe5b046001016001608060020a03168760040154101515612683576006870180546002919062ff0000191662010000835b02179055506006870154875460405161ffff620100009283900481168083528d821694918216937f716894e2a949e79640a4695695c3c281859348dd862e6ecadede2911af42c6719391920460ff169042906020810183600281111561266757fe5b60ff168152602001828152602001935050505060405180910390a35b5b5b6126d6565b5b600101611ec7565b600160a060020a033316600081815260076020908152604091829020548251428152925161ffff909116926000805160206141f683398151915292908290030190a35b505050505050505050565b6126e9613e88565b6126f1613e88565b60005433600160a060020a039081169116141580612742575060008054600160a060020a031681526007602090815260408083205461ffff168352600390915290206001015460a860020a900460ff165b1561274c57610000565b60008054600160a060020a031681526007602090815260408083205461ffff168352600391829052909120600101805460a060020a60ff02191660a060020a835b0217905550600080546127cd91907f4f776e657200000000000000000000000000000000000000000000000000000090600160a060020a03166001610de1565b60008054600160a060020a031681526007602090815260408083205461ffff168352600391829052909120600101805460a060020a60ff02191660a060020a835b021790555061285560007f506573686f000000000000000000000000000000000000000000000000000000732e9cf98a103148172b4e773f0ed2c58269a3fbd66000610de1565b61289760007f47656f726769000000000000000000000000000000000000000000000000000073a0323703351bc5e4905a5080d0f1e3fc4e57220f6000610de1565b61290460007f5361766520706573686f000000000000000000000000000000000000000000007f61797900000000000000000000000000000000000000000000000000000000007f6c6d616f00000000000000000000000000000000000000000000000000000000611c80565b60036040518059106129135750595b908082528060200260200182016040525b509150600182600081518110151561293857fe5b61ffff90921660209283029091019091015281516002908390600190811061295c57fe5b61ffff90921660209283029091019091015281516003908390600290811061298057fe5b61ffff9092166020928302909101909101526040516003908059106129a25750595b908082528060200260200182016040525b509050600a8160008151811015156129c757fe5b602090810290910101528051601490829060019081106129e357fe5b602090810290910101528051601e90829060029081106129ff57fe5b60209081029091010152612a15600183836112b8565b5b5050565b600080808080808080806002805b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff1690811115612a6b57fe5b106138ac576001608060020a038b161580612a9d575061ffff8c1660009081526005602052604090206006015460ff16155b80612abc575061ffff8c16600090815260056020526040902060020154155b15612ac657610000565b61ffff8c166000908152600560205260408120600401905b600291828204019190066010025b905461ffff8e1660009081526005602052604090206101009290920a90046001608060020a03169a5060040160015b600291828204019190066010025b905461ffff8e1660009081526005602052604090206101009290920a90046001608060020a0316995060040160025b600291828204019190066010025b9054906101000a90046001608060020a031697506000965060009550886001608060020a031660001415612b9957610000565b60008a6001608060020a03161115612fd457600095505b61ffff8c16600090815260056020526040902060020154861015612fd45761ffff8c166000908152600560205260409020600201805487908110612bf057fe5b90600052602060002090601091828204019190066002025b905461ffff8e811660009081526005602090815260408083206101009690960a90940490921680825260039094019091529081209196505b600291828204019190066010025b905461ffff8e81166000908152600560209081526040808320938b16835260039093019052206101009290920a90046001608060020a0316945060025b600291828204019190066010025b9054906101000a90046001608060020a03169250896001608060020a03168b85026001608060020a0316811515612ccc57fe5b0491506000826001608060020a03161115612fc857836001608060020a03168285036001608060020a03161115612e0a578b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff166000805160206141d6833981519152876001608060020a031660000342604051808381526020018281526020019250505060405180910390a48b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff16600080516020614216833981519152874260405180836001608060020a03166001608060020a031681526020018281526020019250505060405180910390a4958301956000939290920191612f14565b8b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff166000805160206141d6833981519152856001608060020a031660000342604051808381526020018281526020019250505060405180910390a48b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff16600080516020614216833981519152854260405180836001608060020a03166001608060020a031681526020018281526020019250505060405180910390a4958101959281900392918101915b61ffff808d16600090815260056020908152604080832093891683526003909301905290812085915b600291828204019190066010025b81546001608060020a039384166101009290920a91820293909102191691909117905561ffff808d16600090815260056020908152604080832093891683526003909301905220839060025b600291828204019190066010025b6101000a8154816001608060020a0302191690836001608060020a031602179055505b5b600190950194612bb0565b5b8a6001608060020a0316876001608060020a0316101561320f57600095505b61ffff8c1660009081526005602052604090206002015486101561320f5761ffff8c16600090815260056020526040902060020180548790811061303457fe5b90600052602060002090601091828204019190066002025b905461ffff8e811660009081526005602090815260408083206101009690960a90940490921680825260039094019091522090955060025b600291828204019190066010025b905461ffff8e81166000908152600560209081526040808320938b16835260039093019052206101009290920a90046001608060020a0390811694508a1690888d039060015b600291828204019190066010025b9054906101000a90046001608060020a0316026001608060020a031681151561310b57fe5b0491506000826001608060020a031611156132035761ffff808d166000908152600560209081526040808320938916835260039093019052209682019692820192839060025b600291828204019190066010025b6101000a8154816001608060020a0302191690836001608060020a031602179055508b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff16600080516020614216833981519152854260405180836001608060020a03166001608060020a031681526020018281526020019250505060405180910390a45b5b600190950194612ff4565b5b8a6001608060020a0316876001608060020a031610156135395761ffff8c1660009081526005602052604090206002018054600019810190811061325057fe5b90600052602060002090601091828204019190066002025b905461ffff8e811660009081526005602090815260408083206101009690960a9094049092168082526003909401909152908120919650888d0393505b600291828204019190066010025b9054906101000a90046001608060020a03169350816001608060020a0316846001608060020a031611156133665781840393508b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff166000805160206141d6833981519152856001608060020a031660000342604051808381526020018281526020019250505060405180910390a46133f8565b6000846001608060020a031611156133f8578b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff166000805160206141d6833981519152876001608060020a031660000342604051808381526020018281526020019250505060405180910390a4600093505b5b61ffff808d16600090815260056020908152604080832093891683526003909301905220829060025b600291828204019190066010025b81546001608060020a036101009290920a808204831690940182168402919093021990921691909117905561ffff808d16600090815260056020908152604080832093891683526003909301905290812085915b600291828204019190066010025b6101000a8154816001608060020a0302191690836001608060020a031602179055508b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff16600080516020614216833981519152854260405180836001608060020a03166001608060020a031681526020018281526020019250505060405180910390a48a96505b8a6001608060020a0316876001608060020a0316111561355857610000565b600099506000985060009750600095505b61ffff8c166000908152600560205260409020600201548610156137345761ffff8c16600090815260056020526040812060028101805460039092019291899081106135b157fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a900416815260208101919091526040016000908120905b600291828204019190066010025b905461ffff8e1660009081526005602052604081206002810180546101009590950a9093046001608060020a03169d909d019c600301929091908990811061363e57fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a9004168152602081019190915260400160002060015b600291828204019190066010025b905461ffff8e1660009081526005602052604081206002810180546101009590950a9093046001608060020a03169c909c019b60030192909190899081106136ca57fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a9004168152602081019190915260400160002060025b600291828204019190066010025b9054906101000a90046001608060020a0316880197505b600190950194613569565b61ffff8c1660009081526005602052604081208b916004909101905b600291828204019190066010025b81546001608060020a039384166101009290920a91820293909102191691909117905561ffff8c166000908152600560205260409020899060040160015b600291828204019190066010025b81546001608060020a039384166101009290920a91820293909102191691909117905561ffff8c166000908152600560205260409020889060040160025b600291828204019190066010025b6101000a8154816001608060020a0302191690836001608060020a031602179055508b61ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff167f56b23e5cb3910a046f9a66c3017ae49b4def7ebae1fb08b4adf446b4fd4c47f1894260405180836001608060020a03166001608060020a031681526020018281526020019250505060405180910390a35b6138ef565b600160a060020a033316600081815260076020908152604091829020548251428152925161ffff909116926000805160206141f683398151915292908290030190a35b505050505050505050505050565b60006000600060008551855114151561391557610000565b5060005b85518161ffff161015613e7e57858161ffff1681518110151561393857fe5b602090810290910181015161ffff808a166000908152600584526040808220838516835260030190945292909220875191965093508691831690811061397a57fe5b6020908102909101015192508160005b600291828204019190066010025b90546001608060020a036101009290920a900416838360005b600291828204019190066010025b9054906101000a90046001608060020a03166001608060020a03160112156139e657610000565b8160015b600291828204019190066010025b90546001608060020a036101009290920a900416838360015b600291828204019190066010025b9054906101000a90046001608060020a03166001608060020a0316011215613a4657610000565b8160005b600291828204019190066010025b9054906101000a90046001608060020a03166001608060020a0316836000031315613a8257610000565b8160005b600291828204019190066010025b90546001608060020a036101009290920a900416158015613ad857508160015b600291828204019190066010025b90546001608060020a036101009290920a900416155b15613b365761ffff87166000908152600560205260409020600201805460018101613b038382613f22565b91600052602060002090601091828204019190066002025b815461ffff8089166101009390930a92830292021916179055505b6000831315613c7857828260005b600291828204019190066010025b81546001608060020a036101009290920a8082048316909401821684029190930219909216919091179055828260015b600291828204019190066010025b81546001608060020a036101009290920a808204831690940182168402919093021990921691909117905561ffff8716600090815260056020526040812084916004909101905b600291828204019190066010025b81546001608060020a036101009290920a808204831690940182168402919093021990921691909117905561ffff87166000908152600560205260409020839060040160015b600291828204019190066010025b8282829054906101000a90046001608060020a03160192506101000a8154816001608060020a0302191690836001608060020a03160217905550613dbd565b60008381039083905b600291828204019190066010025b81546001608060020a036101009290920a80820483169490940382168402919093021990921691909117905560008390038260015b600291828204019190066010025b81546001608060020a036101009290920a80820483169490940382168402919093021990921691909117905561ffff87166000908152600560205260408120848203916004909101905b600291828204019190066010025b81546001608060020a036101009290920a80820483169490940382168402919093021990921691909117905561ffff87166000908152600560205260408120908490039060040160015b600291828204019190066010025b8282829054906101000a90046001608060020a03160392506101000a8154816001608060020a0302191690836001608060020a031602179055505b33600160a060020a03166000908152600760209081526040918290205482518681524292810192909252825161ffff8b8116948982169491909316926000805160206141d683398151915292918290030190a433600160a060020a03166000908152600760209081526040918290205482518681524292810192909252825161ffff8b8116948982169491909316927fb9391ec3dd39929885998b0c7d6e055589bf5c1fddbd79099da743a20b82252492918290030190a45b600101613919565b5b50505050505050565b60408051602081019091526000815290565b60408051602081019091526000815290565b60408051602081019091526000815290565b6060604051908101604052806003905b600081526000199091019060200181613ece5790505090565b60408051602081019091526000815290565b6060604051908101604052806003905b600081526000199091019060200181613ece5790505090565b815481835581811511613f5657600f016010900481600f01601090048360005260206000209182019101613f5691906140b9565b5b505050565b815481835581811511613f5657600802816008028360005260206000209182019101613f5691906140da565b5b505050565b82805482825590600052602060002090600f016010900481019282156140275791602002820160005b83821115613ff757835183826101000a81548161ffff021916908361ffff1602179055509260200192600201602081600101049283019260010302613fb7565b80156140255782816101000a81549061ffff0219169055600201602081600101049283019260010302613ff7565b505b50614033929150614143565b5090565b828054828255906000526020600020908101928215614072579160200282015b82811115614072578251825591602001919060010190614057565b5b506140339291506140b9565b5090565b60408051602081019091526000815290565b60408051602081019091526000815290565b60408051602081019091526000815290565b61076291905b8082111561403357600081556001016140bf565b5090565b90565b61076291905b8082111561403357805463ffffffff191681556000614102600183018261418a565b6141106002830160006141b3565b506000600382018190556004820181905560068201805462ffffff1916905560078201556008016140e0565b5090565b90565b61076291905b8082111561403357805461ffff19168155600101614149565b5090565b90565b61076291905b8082111561403357600081556001016140bf565b5090565b90565b50805460008255600f0160109004906000526020600020908101906141af91906140b9565b5b50565b50805460008255906000526020600020908101906141af91906140b9565b5b505600f3eb50aadbf0d7c57ec5f56ac9bc98188c5eaf05702012ebfe3698cf182ccb4b08a520c83f3f94e52d4d4b14319f76c4924f0b58aa571d1d8956acc5849651eacca8dbd4ba5afe4571e9544660d61ec920fc8c397d1ccb89154e803057bde225a165627a7a72305820ec50845bceb4e2af9d47931ea9f11c05697013da047ccf85b0aba80c84d1f8fe0029';

		this.contractGas = '5000000';

		this.connected = false;
		this.initialized = false;
		this.lastBlockNumber = 0;

		this.self = this;
	}

	isWeb3Available(){
		if(typeof web3 == "undefined") return false;
		return true;
	}

	init(callback){
		var self = this;

		web3.eth.getAccounts(function(err, accs) {
			if (err != null) {
				callback("There was an error fetching your accounts.");
				return;
			}

			if (accs.length == 0) {
				callback("Couldn't get any accounts! Make sure Metamask is configured correctly.");
				return;
			}
		
			self.accounts = accs;
			self.account = self.accounts[0];

			console.log("Extracted accounts: ",self.accounts);
			
			callback();
		});
	}

	deployNewContract(callback) {
		var self = this;

		var obitcoinContract = web3.eth.contract(this.contractAbi);
		this.Obitcoin = obitcoinContract.new(
		{
			from: web3.eth.accounts[0], 
			data: this.contractCompiled, 
			gas: this.contractGas
		}, function (e, contract){
			if(e) callback(e, undefined);
			else if (typeof contract.address !== 'undefined') {
				console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
				console.log(contract);

				self.connected = true;

				contract.init({from: self.account}, function(error, result){
					if(!error){
						callback(e, contract.address);
					}
					else
						console.error(error);
				});
			}
		});
	}

	connectToContract(address, callback) {

		var obitcoinContract = web3.eth.contract(this.contractAbi);
		
		this.Obitcoin = obitcoinContract.at(address);
		
		var self = this;

		try {
			this.Obitcoin.getContractAddress.call({from: this.account}, function(error, result){
				if(!error){
					if(result==address){
						console.log("Connection successful");
						self.connected = true;
						callback();
					} else {
						callback("Invalid address!");
					}
				}
				else{
					console.error(error);
					callback("There was an error. Reload the page and try again");
				}
			});
		} catch (err){
			callback(err.message);
		}
	}

	disconnect(){
		this.Obitcoin = undefined;
		this.connected = false;
		if(this.events != undefined){
			this.events.stopWatching();
			this.events = undefined;
		}
	}

	isConnected(){
		return this.connected;
	}

	getAccount(){
		return this.account;
	}

	getPools(callback){
		if(!this.isConnected()) return;

		this.Obitcoin.getPools.call({from: this.account}, function(error, result){
			if(!error){
				var data = [];
				result.forEach(res => data.push(res.valueOf()));
				callback(data);
			}
			else
				console.error(error);
		});
	}

	getPool(pool: number, callback: Function){
		if(!this.isConnected()) return;

		var self = this;

		this.Obitcoin.getPool.call(pool, {from: this.account}, function(error, result){
			if(!error){
				if(result[1].length != result[2].length) console.error("Received corrupt data on getPool("+pool+")");

				let data : string[] = [];
				let members : number[] = [];
				result[0].forEach(item => data.push(self.hex2a(item)));
				result[1].forEach(res => members.push(res.valueOf()));
				
				let tokens : number[] = [];
				let slices : number[] = [];
				let money : number[] = [];

				for(var i = 0; i<result[2].length; i++){
					tokens[i] = Number(result[2][i][0].valueOf());
					slices[i] = Number(result[2][i][1].valueOf());
					money[i] = Number(result[2][i][2].valueOf());
				}

				callback(data, members, tokens, slices, money);
			}
			else console.error(error);
		});
	}

	getMembers(callback: Function){
		if(!this.isConnected()) return;
		var self = this;

		this.Obitcoin.getMembers.call({from: this.account}, function(error, result){
			if(!error){
				let memberIds : number[] = [];
				let names : string[] = [];
				let addresses : string[] = [];
				let permLevels : number[] = [];
				let delegateTo : number[] = [];

				result[0].forEach(res => memberIds.push(res.valueOf()));
				result[1].forEach(res => names.push(self.hex2a(res)));
				addresses = result[2];
				result[3].forEach(res => permLevels.push(res.valueOf()));
				result[4].forEach(res => delegateTo.push(res.valueOf()));

				callback(memberIds, names, addresses, permLevels, delegateTo);
			}
			else
				console.error(error);
		});
	}

	getVotesLength(callback: Function){
		if(!this.isConnected()) return;
		var self = this;

		this.Obitcoin.getVotesLength.call({from: this.account}, function(error, result){
			if(!error){
				callback(result.valueOf());
			} else console.error(error);
		});
	}

	getVote(voteIndex: number, callback: Function){
		if(!this.isConnected()) return;
		var self = this;

		this.Obitcoin.getVote.call(voteIndex, {from: this.account}, function(error, result){
			if(!error){
				let vote : Vote = new Vote();
				vote.voteType = Number(result[0].valueOf());
				vote.pool = Number(result[1].valueOf());
				vote.arg1 = [];
				result[2].forEach(res => vote.arg1.push(Number(res.valueOf())));
				vote.arg2 = [];
				result[3].forEach(res => vote.arg2.push(Number(res.valueOf())));
				vote.startedBy = Number(result[4].valueOf());
				vote.voteState = Number(result[5].valueOf());
				vote.endTime = Number(result[6].valueOf());
				vote.votedFor = Number(result[7].valueOf());
				vote.votedAgainst = Number(result[8].valueOf());
				vote.voted = new Map<number, boolean>();
				vote.id = Number(voteIndex);

				for(var i = 0; i<result[9].length; i++){
					vote.voted[result[10][i].valueOf()] = result[9][i].valueOf();
				}

				callback(vote);
			} else console.error(error);
		});
	}

	getWholeVotes(callback: Function){
		var votes : Vote[] = [];
		var self = this;

		this.getVotesLength(function(length: number){
			if(length == 0) callback(votes);

			for(var i = 0; i<length; i++){
				self.getVote(i, function(vote: Vote){
					votes.push(vote);
					if(votes.length == length) callback(votes);
				});
			}
		});
	}


	getWholeMembers(callback: Function){
		var members :Member[] = [];
		var self = this;
		this.getMembers(function(memberIds : number[], memberNames : string[], memberAddresses : string[], permLevels : number[], delegateTo: number[]){
			if(memberIds.length==0) callback(members);

			for(var i = 0; i<memberIds.length; i++){
				let member : Member = new Member();

				member.id = memberIds[i];
				member.name = memberNames[i];
				member.address = memberAddresses[i];
				member.permissionLevel = permLevels[i];
				member.delegateTo = delegateTo[i];

				members.push(member);
			}

			callback(members);
		});
	}

	getWholePools(callback: Function){
		var pools: Pool[] = [];
		var self = this;
		this.getPools(function(data: number[]){
			if(data.length==0) callback(pools);

			for(var i = 0; i<data.length; i++){
				self.getWholePool(data[i], function(pool: Pool){
					pools.push(pool);

					if(pools.length == data.length){
						callback(pools);
					}
				});

			}
		});
	}

	getWholePool(id: number, callback: Function){
		var self = this;

		var pool = new Pool();
		pool.id = Number(id);

		pool.tokens = new Map<number, number>();
		pool.slices = new Map<number, number>();
		pool.money = new Map<number, number>();

		this.getPool(id, function(data: string[], members: number[], tokens: number[], slices: number[], money: number[]){
			pool.name = data[0];
			pool.legalContract = data[1];
			pool.financialReports = data[2];

			pool.members = members;

			for(var i = 0; i<members.length; i++){
				pool.tokens[members[i]] = tokens[i];
				pool.slices[members[i]] = slices[i];
				pool.money[members[i]] = money[i];
			}

			callback(pool);		
		});
	}

	addMember(name, address, isAdmin, callback){
		if(!this.isConnected()) return;

		this.Obitcoin.updateMember(0, name, address, isAdmin, {from: this.account}, function(error, result){
			if(!error){
				callback(result);
			}
			else
				console.error(error);
		});
	}

	createDebtPool(name, legalContract, financialReports, callback) {
		if(!this.isConnected()) return;

		this.Obitcoin.updateDebtPool(0, name, legalContract, financialReports, {from: this.account}, function(error, result){
			if(!error)
				callback(result);
			else
				console.error(error);
		});
	}

	updateMember(member: number, name: string, address: string, isAdmin: boolean, callback: Function){
		if(!this.isConnected()) return;

		this.Obitcoin.updateMember(member, name, address, isAdmin, {from: this.account}, function(error, result){
			if(!error){
				callback(result);
			}
			else
				console.error(error);
		});
	}

	updatePool(pool, name, legalContract, financialReports, callback){
		if(!this.isConnected()) return;

		this.Obitcoin.updateDebtPool(pool, name, legalContract, financialReports, {from: this.account}, function(error, result){
			if(!error){
				callback(result);
			}
			else
				console.error(error);
		});
	}

	delegateVote(to: number, callback: Function){
		if(!this.isConnected()) return;

		this.Obitcoin.delegateVote(to, {from: this.account}, function(error, result){
			if(!error){
				callback(result);
			} else console.log(error);
		});
	}

	vote(voteIndex: number, voteFor: boolean, callback: Function){
		if(!this.isConnected()) return;

		this.Obitcoin.vote(voteIndex, voteFor, {from: this.account}, function(error, result){
			if(!error){
				callback(result);
			} else console.error(error);
		});
	}

	sendTokens(pool: number, members: number[], amount: number[], callback: Function){
		if(!this.isConnected()) return;

		this.Obitcoin.sendTokens(pool, members, amount, {from: this.account}, function(error, result){
			if(!error)
				callback(result)
			else
				console.error(error);
		});
	}

	buyTokens(pool, amount, callback){
		if(!this.isConnected()) return;

		this.Obitcoin.buyTokens(pool, amount, {from: this.account}, function(error, result){
			if(!error)
				callback(result)
			else
				console.error(error);
		});
	}

	getLastBlockNumber(){
		return this.lastBlockNumber;
	}

	startListeningForEvents(callback){
		if(!this.isConnected()) return;

		var self = this;

		this.lastBlockNumber = web3.eth.getBlockNumber(function(err, result){
			if(err) return;
			self.lastBlockNumber = result;

			self.Obitcoin.getPublishingBlockNumber.call({from: self.account}, function(error, result){

				self.events = self.Obitcoin.allEvents({fromBlock: result.valueOf()});
				self.events.watch(function(err, event) {
					if (err) {
						console.log(err)
						return;
					}
					callback(event);
				});

			});
		});
	}

	hex2a(hexx) { //convert a byte array to string
		var hex = hexx.toString(); //force conversion
		var str = '';
		var int;
		for (var i = 2; i < hex.length; i += 2){
			int = parseInt(hex.substr(i, 2), 16);
			if(int==0) continue;
			str += String.fromCharCode(int);
		}
		return str;
	}
}