import { Injectable } from '@angular/core';

import { Member } from './member';
import { Pool } from './pool';

declare var web3: any;

@Injectable()

export class contractintegration{
	accounts: any[];
	account: any;
	contractAbi: any;
	contractCompiled: any;
	contractGas: any;
	connected: any;
	initialized: any;
	lastBlockNumber: any;
	self: any;

	events: any;

	Obitcoin: any;

	constructor(){
		this.accounts = [];
		this.account = "";

		this.contractAbi = [{"constant":true,"inputs":[],"name":"getVotesLength","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"voteIndex","type":"uint16"}],"name":"getVote","outputs":[{"name":"","type":"uint8"},{"name":"","type":"uint16"},{"name":"","type":"uint16[]"},{"name":"","type":"int256[]"},{"name":"","type":"uint16"},{"name":"","type":"bool"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"voted","type":"bool[]"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"pool","type":"uint16"}],"name":"getPool","outputs":[{"name":"","type":"bytes16[3]"},{"name":"","type":"uint16[]"},{"name":"","type":"uint128[3][]"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getContractAddress","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getPublishingBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"member","type":"uint16"},{"name":"name","type":"bytes32"},{"name":"adr","type":"address"},{"name":"isAdmin","type":"bool"}],"name":"updateMember","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getPools","outputs":[{"name":"","type":"uint16[]"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"pool","type":"uint16"},{"name":"toMembers","type":"uint16[]"},{"name":"amount","type":"int256[]"}],"name":"sendTokens","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getMembers","outputs":[{"name":"","type":"uint16[]"},{"name":"","type":"bytes32[]"},{"name":"","type":"address[]"},{"name":"","type":"uint8[]"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"name","type":"bytes16"},{"name":"legalContract","type":"bytes16"},{"name":"financialReports","type":"bytes16"}],"name":"createDebtPool","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"pool","type":"uint16"},{"name":"name","type":"bytes16"},{"name":"legalContract","type":"bytes16"},{"name":"financialReports","type":"bytes16"}],"name":"updateDebtPool","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"voteIndex","type":"uint16"},{"name":"voteFor","type":"bool"}],"name":"vote","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"name","type":"bytes32"},{"name":"adr","type":"address"},{"name":"isAdmin","type":"bool"}],"name":"addMember","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"pool","type":"uint16"},{"name":"amount","type":"uint128"}],"name":"buyTokens","outputs":[],"payable":false,"type":"function"},{"inputs":[],"payable":false,"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"to","type":"uint16"},{"indexed":true,"name":"pool","type":"uint16"},{"indexed":false,"name":"amount","type":"int256"},{"indexed":false,"name":"time","type":"uint256"}],"name":"TokenTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"to","type":"uint16"},{"indexed":true,"name":"pool","type":"uint16"},{"indexed":false,"name":"amount","type":"uint128"},{"indexed":false,"name":"time","type":"uint256"}],"name":"MoneyTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"to","type":"uint16"},{"indexed":true,"name":"pool","type":"uint16"},{"indexed":false,"name":"amount","type":"int256"},{"indexed":false,"name":"time","type":"uint256"}],"name":"SliceTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"pool","type":"uint16"},{"indexed":false,"name":"amount","type":"uint128"},{"indexed":false,"name":"time","type":"uint256"}],"name":"TokenPurchase","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"pool","type":"uint16"},{"indexed":false,"name":"added","type":"bool"},{"indexed":false,"name":"time","type":"uint256"}],"name":"PoolChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"fromAddress","type":"address"},{"indexed":false,"name":"time","type":"uint256"}],"name":"UnauthorizedAccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"to","type":"uint16"},{"indexed":false,"name":"added","type":"bool"},{"indexed":false,"name":"time","type":"uint256"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"to","type":"uint16"},{"indexed":false,"name":"added","type":"bool"},{"indexed":false,"name":"time","type":"uint256"}],"name":"PersonChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"voteIndex","type":"uint16"},{"indexed":false,"name":"voteType","type":"uint8"},{"indexed":false,"name":"endTime","type":"uint256"},{"indexed":false,"name":"time","type":"uint256"}],"name":"VoteStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"voteIndex","type":"uint16"},{"indexed":false,"name":"voteType","type":"uint8"},{"indexed":false,"name":"result","type":"bool"},{"indexed":false,"name":"time","type":"uint256"}],"name":"VoteEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"uint16"},{"indexed":true,"name":"voteIndex","type":"uint16"},{"indexed":false,"name":"voteType","type":"uint8"},{"indexed":false,"name":"vote","type":"bool"},{"indexed":false,"name":"time","type":"uint256"}],"name":"Voted","type":"event"}];

		this.contractCompiled = '606060405234156200000d57fe5b5b60008054600160a060020a03191633600160a060020a039081169190911780835543600955600880546201000061ffff19909116600190811763ffff0000191691909117909155911682526007602090815260408084205461ffff16845260039182905290922001805460a060020a60ff02191674010000000000000000000000000000000000000000835b0217905550600054620000e8907f4f776e657200000000000000000000000000000000000000000000000000000090600160a060020a03166001640100000000620020e86200014682021704565b60008054600160a060020a031681526007602090815260408083205461ffff168352600391829052909120600101805460a060020a60ff02191674010000000000000000000000000000000000000000835b02179055505b620004f8565b60025b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015474010000000000000000000000000000000000000000900460ff16908111156200019e57fe5b148062000200575060035b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015474010000000000000000000000000000000000000000900460ff1690811115620001fe57fe5b145b156200043d57600160a060020a03821615156200021d5762000000565b600160a060020a03821660009081526007602052604090205461ffff1615620002465762000000565b60408051608081018252848152600160a060020a0384166020820152908101826200027357600162000276565b60025b60038111156200028257fe5b81526001602091820181905260085461ffff166000908152600380845260409182902085518155938501519284018054600160a060020a031916600160a060020a039094169390931780845591850151929160a060020a60ff02191690740100000000000000000000000000000000000000009084908111156200030257fe5b0217905550606091909101516001918201805491151575010000000000000000000000000000000000000000000260a860020a60ff0219909216919091179055600854600160a060020a0384166000908152600760205260409020805461ffff191661ffff909216919091179055600480549091810162000384838262000497565b91600052602060002090601091828204019190066002025b60088054835461ffff6101009490940a848102199091169184160217909255905433600160a060020a031660009081526007602090815260409182902054825160018152429281019290925282519385169550909316927f7107c2ae9754688147920c7dbf25c81ed808624042d38439123c6da5fe34beb4929081900390910190a36008805461ffff8082166001011661ffff199091161790555b62000492565b600160a060020a033316600081815260076020908152604091829020548251428152925161ffff909116927f08a520c83f3f94e52d4d4b14319f76c4924f0b58aa571d1d8956acc5849651ea92908290030190a35b505050565b8154818355818115116200049257600f016010900481600f01601090048360005260206000209182019101620004929190620004d4565b5b505050565b620004f591905b80821115620004f15760008155600101620004db565b5090565b90565b613f4180620005086000396000f300606060405236156100b45763ffffffff60e060020a600035041663267e652981146100b6578063279be9dd146100d85780632ce126691461023f57806332a2c5d01461034c578063438a5f131461037857806357091c811461039a578063673a2a1f146103c75780636ccd5bb0146104325780639eab5253146104c1578063a5f975541461061c578063cee11e9614610647578063d738d4b314610679578063e1669f1714610697578063f3fa89df146106bd575bfe5b34156100be57fe5b6100c66106e2565b60408051918252519081900360200190f35b34156100e057fe5b6100ef61ffff600435166106e9565b604051808b60028111156100ff57fe5b60ff1681526020018a61ffff1661ffff16815260200180602001806020018961ffff1661ffff168152602001881515151581526020018781526020018681526020018581526020018060200184810384528c818151815260200191508051906020019060200280838360008314610191575b80518252602083111561019157601f199092019160209182019101610171565b5050509190910185810384528c5181528c5160209182019250818e01910280838382156101d9575b8051825260208311156101d957601f1990920191602091820191016101b9565b5050509190910185810383528651815286516020918201925081880191028083838215610221575b80518252602083111561022157601f199092019160209182019101610201565b5050509050019d505050505050505050505050505060405180910390f35b341561024757fe5b61025661ffff60043516610980565b604051808460608083835b80518252602083111561028157601f199092019160209182019101610261565b50505090500180602001806020018381038352858181518152602001915080519060200190602002808383600083146102d5575b8051825260208311156102d557601f1990920191602091820191016102b5565b5050509050018381038252848181518152602001915080516000925b818410156103385760208085028401015160608083835b80518252602083111561032857601f199092019160209182019101610308565b50505090500192600101926102f1565b925050509550505050505060405180910390f35b341561035457fe5b61035c610c8b565b60408051600160a060020a039092168252519081900360200190f35b341561038057fe5b6100c6610c90565b60408051918252519081900360200190f35b34156103a257fe5b6103c561ffff60043516602435600160a060020a03604435166064351515610c97565b005b34156103cf57fe5b6103d7611024565b604080516020808252835181830152835191928392908301918581019102808383821561041f575b80518252602083111561041f57601f1990920191602091820191016103ff565b5050509050019250505060405180910390f35b341561043a57fe5b6040805160248035600481810135602081810286810182019097528186526103c59661ffff84351696939560449501929182919085019084908082843750506040805187358901803560208181028481018201909552818452989a9989019892975090820195509350839250850190849080828437509496506110ab95505050505050565b005b34156104c957fe5b6104d16113a5565b604051808060200180602001806020018060200185810385528981815181526020019150805190602001906020028083836000831461052b575b80518252602083111561052b57601f19909201916020918201910161050b565b50505091909101868103855289518152895160209182019250818b0191028083838215610573575b80518252602083111561057357601f199092019160209182019101610553565b50505091909101868103845288518152885160209182019250818a01910280838382156105bb575b8051825260208311156105bb57601f19909201916020918201910161059b565b5050509190910186810383528751815287516020918201925081890191028083838215610603575b80518252602083111561060357601f1990920191602091820191016105e3565b5050509050019850505050505050505060405180910390f35b341561062457fe5b6103c56001608060020a031960043581169060243581169060443516611693565b005b341561064f57fe5b6103c561ffff600435166001608060020a0319602435811690604435811690606435166118c0565b005b341561068157fe5b6103c561ffff600435166024351515611a75565b005b341561069f57fe5b6103c5600435600160a060020a036024351660443515156120e8565b005b34156106c557fe5b6103c561ffff600435166001608060020a03602435166123fd565b005b6001545b90565b600060006106f5613b68565b6106fd613b68565b6000600060006000600061070f613b68565b6000600060018d61ffff1681548110151561072657fe5b906000526020600020906008020160005b50805462010000900461ffff1660009081526005602052604090819020600201549051919350908059106107685750595b908082528060200260200182016040525b509250600090505b815461ffff620100009091048116600090815260056020526040902060020154908216101561084657815461ffff6201000090910481166000908152600560208190526040822060020180549186019390919085169081106107df57fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a900481168252602082019290925260400160002054845160ff90911691859190841690811061082e57fe5b9115156020928302909101909101525b600101610781565b815460068301546007840154600385015460048601546001870180546040805160208084028201810190925282815260ff6101008a0481169961ffff620100009182900481169a969960028f019991881698929097049092169594919390928e9290918a919083018282801561090357602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116108ca5790505b505050505097508680548060200260200160405190810160405280929190818152602001828054801561095557602002820191906000526020600020905b815481526020019060010190808311610941575b505050505096509b509b509b509b509b509b509b509b509b509b505b50509193959799509193959799565b610988613b9e565b610990613b68565b610998613b68565b6109a0613b9e565b6109a8613b68565b61ffff861660009081526005602052604081206006015460ff1615156109cd57610000565b61ffff8716600090815260056020526040908190206002015490518059106109f25750595b908082528060200260200182016040528015610a2857816020015b610a15613b9e565b815260200190600190039081610a0d5790505b5061ffff8816600090815260056020526040812054919350608060020a9091029084905b6001608060020a03199092166020928302919091015261ffff8816600090815260059091526040902054608060020a90819004028360015b6001608060020a03199092166020928302919091015261ffff8816600090815260059091526040902060010154608060020a028360025b6001608060020a031990921660209290920201525060005b61ffff8088166000908152600560205260409020600201549082161015610be05761ffff80881660009081526005602052604081206002810180546003909201939091908516908110610b2257fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a90041681526020810191909152604090810160002081516060810190925260038282826020028201916000905b82829054906101000a90046001608060020a03166001608060020a031681526020019060100190602082600f01049283019260010382029150808411610b735790505b5050505050828261ffff16815181101515610bcd57fe5b602090810290910101525b600101610ad3565b82600560008961ffff1661ffff1681526020019081526020016000206002018381805480602002602001604051908101604052809291908181526020018280548015610c7357602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff1681526020019060020190602082600101049283019260010382029150808411610c3a5790505b505050505091509550955095505b5050509193909250565b305b90565b6009545b90565b60025b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff1690811115610cdd57fe5b1480610d2c575060035b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff1690811115610d2a57fe5b145b15610fdb5761ffff841660009081526003602052604090206001015460a860020a900460ff161515610d5d57610000565b60035b61ffff851660009081526003602081905260409091206001015460a060020a900460ff1690811115610d8e57fe5b1415610d9957610000565b600160a060020a03821660009081526007602052604090205461ffff1615610dc057610000565b61ffff84166000818152600360208181526040808420600181018054600160a060020a03908116875260078552838720805461ffff19908116909155908a168088529387208054909116881790559590945291905290859055815473ffffffffffffffffffffffffffffffffffffffff191617905560025b61ffff851660009081526003602081905260409091206001015460a060020a900460ff1690811115610e6657fe5b148015610e71575080155b80610eb2575060015b61ffff851660009081526003602081905260409091206001015460a060020a900460ff1690811115610ea857fe5b148015610eb25750805b5b15610f1a57600160a060020a03331660009081526007602090815260409182902054825184151581524292810192909252825161ffff808916949216927f955f9cd413b1613b572ff1877b25ae515763d2a51d926bd21ba78d8ec4f16c3c92908290030190a35b80610f26576001610f29565b60025b61ffff851660009081526003602081905260409091206001018054909174ff0000000000000000000000000000000000000000199091169060a060020a908490811115610f7257fe5b0217905550600160a060020a03331660009081526007602090815260408083205481519384524292840192909252805161ffff808916949316927f7107c2ae9754688147920c7dbf25c81ed808624042d38439123c6da5fe34beb492908290030190a35b61101e565b600160a060020a033316600081815260076020908152604091829020548251428152925161ffff90911692600080516020613ed683398151915292908290030190a35b50505050565b61102c613b68565b60068054806020026020016040519081016040528092919081815260200182805480156110a057602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116110675790505b505050505090505b90565b60008060035b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff16908111156110f457fe5b1461114057600160a060020a033316600081815260076020908152604091829020548251428152925161ffff90911692600080516020613ed683398151915292908290030190a361139d565b8351158061114d57508251155b8061115a57508351835114155b1561116457610000565b61ffff851660009081526005602052604090206006015460ff16151561118957610000565b600091505b83518261ffff16101561121a57828261ffff168151811015156111ad57fe5b9060200190602002015160001480611204575060036000858461ffff168151811015156111d657fe5b602090810290910181015161ffff1682528101919091526040016000206001015460ff60a860020a90910416155b1561120e57610000565b5b60019091019061118e565b61ffff8516600090815260056020526040902060020154151561124757611242858585613479565b61139d565b600180549061125890828101613c02565b5060018054600019810190811061126b57fe5b906000526020600020906008020160005b50805460ff1916600190811780835591925090829061ff001916610100835b0217905550600160a060020a03331660009081526007602081815260409092205460068401805461ffff191661ffff90921691909117905562093a8042019083015584516112f191600184019190870190613c34565b50805463ffff000019166201000061ffff871602178155825161131d9060028301906020860190613cdd565b5060015460068201548254600784015460405160001990940161ffff908116949316927f54768e4038743bf087edeaee4c70e09af41217e00e95b694911992dedd579aa592610100900460ff16919042908084600281111561137b57fe5b60ff168152602001838152602001828152602001935050505060405180910390a35b5b5050505050565b6113ad613b68565b6113b5613b68565b6113bd613b68565b6113c5613b68565b6113cd613b68565b6113d5613b68565b6113dd613b68565b600454604051600091908059106113f15750595b908082528060200260200182016040525b50600454604051919550908059106114175750595b908082528060200260200182016040525b506004546040519194509080591061143d5750595b908082528060200260200182016040525b509150600090505b60045461ffff82161015611601576003600060048361ffff1681548110151561147b57fe5b90600052602060002090601091828204019190066002025b9054906101000a900461ffff1661ffff1661ffff16815260200190815260200160002060000154848261ffff168151811015156114cc57fe5b602090810290910101526004805460039160009161ffff85169081106114ee57fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a9004811682526020820192909252604001600020600101548451600160a060020a0390911691859190841690811061154657fe5b600160a060020a039092166020928302909101909101526004805460039160009161ffff851690811061157557fe5b90600052602060002090601091828204019190066002025b9054906101000a900461ffff1661ffff1661ffff16815260200190815260200160002060010160149054906101000a900460ff16828261ffff168151811015156115d357fe5b9060200190602002019060038111156115e857fe5b908160038111156115f557fe5b9052505b600101611456565b60048484848380548060200260200160405190810160405280929190818152602001828054801561167957602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116116405790505b5050505050935097509750975097505b5050505090919293565b600060025b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff16908111156116db57fe5b148061172a575060035b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff169081111561172857fe5b145b15610fdb575060085461ffff620100009091041660009081526005602052604090208054608060020a80850481028187046001608060020a0319938416176001608060020a03161783556001808401805492860492909316919091179091556006808301805460ff1916831790558054909181016117a88382613d5f565b91600052602060002090601091828204019190066002025b6008805483546101009390930a61ffff620100009283900481168202918102199094161790935554600160a060020a0333166000908152600760209081526040918290205482516001815242928101929092528251959093048416955091909216927f1f6540b99f70a62641d39a080ec69b8a1442f4a4019da09b6bb25ae3d7d7621c929181900390910190a360088054600161ffff62010000808404821692909201160263ffff0000199091161790555b61101e565b600160a060020a033316600081815260076020908152604091829020548251428152925161ffff90911692600080516020613ed683398151915292908290030190a35b50505050565b60025b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff169081111561190657fe5b1480611955575060035b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff169081111561195357fe5b145b15610fdb5761ffff841660009081526005602052604090206006015460ff16151561197f57610000565b61ffff80851660008181526005602090815260408083208054608060020a808a048102818c046001608060020a0319938416176001608060020a03161783556001909201805492890492909116919091179055600160a060020a03331683526007825280832054815193845242928401929092528051939491909116927f1f6540b99f70a62641d39a080ec69b8a1442f4a4019da09b6bb25ae3d7d7621c9281900390910190a35b61101e565b600160a060020a033316600081815260076020908152604091829020548251428152925161ffff90911692600080516020613ed683398151915292908290030190a35b50505050565b6000600060018461ffff16815481101515611a8c57fe5b906000526020600020906008020160005b505462010000900461ffff1660005b61ffff808316600090815260056020526040902060020154908216101561209d57600160a060020a03331660009081526007602090815260408083205461ffff86811685526005909352922060020180549282169290918416908110611b0e57fe5b90600052602060002090601091828204019190066002025b9054906101000a900461ffff1661ffff161415612094576001805461ffff8816908110611b4f57fe5b906000526020600020906008020160005b50600160a060020a03331660009081526007602090815260408083205461ffff168084526005850190925290912054919550935060ff1680611bac5750600684015462010000900460ff165b15611bb657610000565b61ffff831660009081526005850160205260409020805460ff191660011790558415611eb957835461ffff6201000090910481166000908152600560209081526040808320938716835260039093019052908120905b600291828204019190066010025b905460038601805461010093840a9092046001608060020a0316909101905533600160a060020a031660009081526007602052604090819020548654915161ffff8a8116949216927fac0854749fb48f6d37eaf633d7f82f631275451dd0eb1c673b68509a4ab9753292900460ff16908990429080846002811115611c9b57fe5b60ff16815292151560208401525060408083019190915251908190036060019150a3835462010000900461ffff1660009081526005602052604081206002916004909101905b600291828204019190066010025b9054906101000a90046001608060020a03166001608060020a0316811515611d1357fe5b046001016001608060020a03168460030154101515611eb45760068401805462ff000019166201000017905560015b8454610100900460ff166002811115611d5757fe5b1415611e3f57835460018501805460408051602080840282018101909252828152611e3f9462010000900461ffff169390929091830182828015611de257602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff1681526020019060020190602082600101049283019260010382029150808411611da95790505b505050505086600201805480602002602001604051908101604052809291908181526020018280548015611e3557602002820191906000526020600020905b815481526020019060010190808311611e21575b5050505050613479565b5b6006840154845460405161ffff8981169316917f79764e4f09c52b5e66c410a776825d7e4f24987cb19369b904746b61e15759309161010090910460ff1690600190429080846002811115611e9157fe5b60ff16815292151560208401525060408083019190915251908190036060019150a35b61208d565b835461ffff6201000090910481166000908152600560209081526040808320938716835260039093019052908120905b600291828204019190066010025b905460048601805461010093840a9092046001608060020a0316909101905533600160a060020a031660009081526007602052604090819020548654915161ffff8a8116949216927fac0854749fb48f6d37eaf633d7f82f631275451dd0eb1c673b68509a4ab9753292900460ff16908990429080846002811115611f7857fe5b60ff16815292151560208401525060408083019190915251908190036060019150a3835462010000900461ffff1660009081526005602052604081206002916004909101905b600291828204019190066010025b9054906101000a90046001608060020a03166001608060020a0316811515611ff057fe5b046001016001608060020a0316846004015410151561208d5760068401805462ff00001916620100001790819055845460405161ffff808a169316917f79764e4f09c52b5e66c410a776825d7e4f24987cb19369b904746b61e15759309161010090910460ff169060009042908084600281111561206a57fe5b60ff16815292151560208401525060408083019190915251908190036060019150a35b5b5b6120e0565b5b600101611aac565b600160a060020a033316600081815260076020908152604091829020548251428152925161ffff90911692600080516020613ed683398151915292908290030190a35b505050505050565b60025b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff169081111561212e57fe5b148061217d575060035b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff169081111561217b57fe5b145b156123b557600160a060020a038216151561219757610000565b600160a060020a03821660009081526007602052604090205461ffff16156121be57610000565b60408051608081018252848152600160a060020a0384166020820152908101826121e95760016121ec565b60025b60038111156121f757fe5b81526001602091820181905260085461ffff16600090815260038084526040918290208551815593850151928401805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039094169390931780845591850151929174ff000000000000000000000000000000000000000019169060a060020a90849081111561228057fe5b0217905550606091909101516001918201805491151560a860020a0275ff00000000000000000000000000000000000000000019909216919091179055600854600160a060020a0384166000908152600760205260409020805461ffff191661ffff90921691909117905560048054909181016122fd8382613d5f565b91600052602060002090601091828204019190066002025b60088054835461ffff6101009490940a848102199091169184160217909255905433600160a060020a031660009081526007602090815260409182902054825160018152429281019290925282519385169550909316927f7107c2ae9754688147920c7dbf25c81ed808624042d38439123c6da5fe34beb4929081900390910190a36008805461ffff8082166001011661ffff199091161790555b6123f8565b600160a060020a033316600081815260076020908152604091829020548251428152925161ffff90911692600080516020613ed683398151915292908290030190a35b505050565b600080808080808080808060025b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff169081111561244e57fe5b148061249d575060035b33600160a060020a031660009081526007602090815260408083205461ffff1683526003918290529091206001015460a060020a900460ff169081111561249b57fe5b145b15613428576001608060020a038b1615806124cf575061ffff8c1660009081526005602052604090206006015460ff16155b806124ee575061ffff8c16600090815260056020526040902060020154155b156124f857610000565b61ffff8c166000908152600560205260408120600401905b600291828204019190066010025b905461ffff8e1660009081526005602052604090206101009290920a90046001608060020a03169a5060040160015b600291828204019190066010025b905461ffff8e1660009081526005602052604090206101009290920a90046001608060020a0316995060040160025b600291828204019190066010025b90546001608060020a036101009290920a9004169750600096508695505b61ffff8c166000908152600560205260409020600201548610156126f55761ffff8c16600090815260056020526040812060028101805460039092019291899081106125fe57fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a900416815260208101919091526040016000908120905b600291828204019190066010025b905461ffff8e1660009081526005602052604081206002810180546101009590950a9093046001608060020a03169d909d019c600301929091908990811061268b57fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a9004168152602081019190915260400160002060015b600291828204019190066010025b9054906101000a90046001608060020a0316890198505b6001909501946125b6565b6001608060020a038916151561270a57610000565b6000955060008a6001608060020a03161115612b4957600095505b61ffff8c16600090815260056020526040902060020154861015612b495761ffff8c16600090815260056020526040902060020180548790811061276557fe5b90600052602060002090601091828204019190066002025b905461ffff8e811660009081526005602090815260408083206101009690960a90940490921680825260039094019091529081209196505b600291828204019190066010025b905461ffff8e81166000908152600560209081526040808320938b16835260039093019052206101009290920a90046001608060020a0316945060025b600291828204019190066010025b9054906101000a90046001608060020a03169250896001608060020a03168b85026001608060020a031681151561284157fe5b0491506000826001608060020a03161115612b3d57836001608060020a03168285036001608060020a0316111561297f578b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff16600080516020613eb6833981519152876001608060020a031660000342604051808381526020018281526020019250505060405180910390a48b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff16600080516020613ef6833981519152874260405180836001608060020a03166001608060020a031681526020018281526020019250505060405180910390a4958301956000939290920191612a89565b8b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff16600080516020613eb6833981519152856001608060020a031660000342604051808381526020018281526020019250505060405180910390a48b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff16600080516020613ef6833981519152854260405180836001608060020a03166001608060020a031681526020018281526020019250505060405180910390a4958101959281900392918101915b61ffff808d16600090815260056020908152604080832093891683526003909301905290812085915b600291828204019190066010025b81546001608060020a039384166101009290920a91820293909102191691909117905561ffff808d16600090815260056020908152604080832093891683526003909301905220839060025b600291828204019190066010025b6101000a8154816001608060020a0302191690836001608060020a031602179055505b5b600190950194612725565b5b8a6001608060020a0316876001608060020a03161015612d8b57600095505b61ffff8c16600090815260056020526040902060020154861015612d8b5761ffff8c166000908152600560205260409020600201805487908110612ba957fe5b90600052602060002090601091828204019190066002025b905461ffff8e811660009081526005602090815260408083206101009690960a90940490921680825260039094019091522090955060025b600291828204019190066010025b905461ffff8e81166000908152600560209081526040808320938b16835260039093019052206101009290920a90046001608060020a0316935060015b600291828204019190066010025b9054906101000a90046001608060020a03169050886001608060020a0316878c0382026001608060020a0316811515612c8757fe5b0491506000826001608060020a03161115612d7f5761ffff808d166000908152600560209081526040808320938916835260039093019052209682019692820192839060025b600291828204019190066010025b6101000a8154816001608060020a0302191690836001608060020a031602179055508b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff16600080516020613ef6833981519152854260405180836001608060020a03166001608060020a031681526020018281526020019250505060405180910390a45b5b600190950194612b69565b5b8a6001608060020a0316876001608060020a031610156130b55761ffff8c16600090815260056020526040902060020180546000198101908110612dcc57fe5b90600052602060002090601091828204019190066002025b905461ffff8e811660009081526005602090815260408083206101009690960a9094049092168082526003909401909152908120919650888d0393505b600291828204019190066010025b9054906101000a90046001608060020a03169350816001608060020a0316846001608060020a03161115612ee25781840393508b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff16600080516020613eb6833981519152856001608060020a031660000342604051808381526020018281526020019250505060405180910390a4612f74565b6000846001608060020a03161115612f74578b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff16600080516020613eb6833981519152876001608060020a031660000342604051808381526020018281526020019250505060405180910390a4600093505b5b61ffff808d16600090815260056020908152604080832093891683526003909301905220829060025b600291828204019190066010025b81546001608060020a036101009290920a808204831690940182168402919093021990921691909117905561ffff808d16600090815260056020908152604080832093891683526003909301905290812085915b600291828204019190066010025b6101000a8154816001608060020a0302191690836001608060020a031602179055508b61ffff168561ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff16600080516020613ef6833981519152854260405180836001608060020a03166001608060020a031681526020018281526020019250505060405180910390a48a96505b8a6001608060020a0316876001608060020a031611156130d457610000565b600099506000985060009750600095505b61ffff8c166000908152600560205260409020600201548610156132b05761ffff8c166000908152600560205260408120600281018054600390920192918990811061312d57fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a900416815260208101919091526040016000908120905b600291828204019190066010025b905461ffff8e1660009081526005602052604081206002810180546101009590950a9093046001608060020a03169d909d019c60030192909190899081106131ba57fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a9004168152602081019190915260400160002060015b600291828204019190066010025b905461ffff8e1660009081526005602052604081206002810180546101009590950a9093046001608060020a03169c909c019b600301929091908990811061324657fe5b90600052602060002090601091828204019190066002025b905461ffff6101009290920a9004168152602081019190915260400160002060025b600291828204019190066010025b9054906101000a90046001608060020a0316880197505b6001909501946130e5565b61ffff8c1660009081526005602052604081208b916004909101905b600291828204019190066010025b81546001608060020a039384166101009290920a91820293909102191691909117905561ffff8c166000908152600560205260409020899060040160015b600291828204019190066010025b81546001608060020a039384166101009290920a91820293909102191691909117905561ffff8c166000908152600560205260409020889060040160025b600291828204019190066010025b6101000a8154816001608060020a0302191690836001608060020a031602179055508b61ffff166007600033600160a060020a0316600160a060020a0316815260200190815260200160002060009054906101000a900461ffff1661ffff167f56b23e5cb3910a046f9a66c3017ae49b4def7ebae1fb08b4adf446b4fd4c47f1894260405180836001608060020a03166001608060020a031681526020018281526020019250505060405180910390a35b61346b565b600160a060020a033316600081815260076020908152604091829020548251428152925161ffff90911692600080516020613ed683398151915292908290030190a35b505050505050505050505050565b6000600060008451845114151561348f57610000565b5060005b84518161ffff1610156120e057848161ffff168151811015156134b257fe5b906020019060200201519250838161ffff168151811015156134d057fe5b602090810290910181015161ffff8089166000908152600584526040808220928816825260039092019093528220909350905b600291828204019190066010025b905461ffff88811660009081526005602090815260408083209389168352600390930190529081206101009390930a9091046001608060020a03169184915b600291828204019190066010025b9054906101000a90046001608060020a03166001608060020a031601121561358557610000565b61ffff80871660009081526005602090815260408083209387168352600390930190522060015b600291828204019190066010025b905461ffff8881166000908152600560209081526040808320938916835260039093019052206101009290920a90046001608060020a031690839060015b600291828204019190066010025b9054906101000a90046001608060020a03166001608060020a031601121561362d57610000565b61ffff8087166000908152600560209081526040808320938716835260039093019052908120905b600291828204019190066010025b9054906101000a90046001608060020a03166001608060020a031682600003131561368d57610000565b61ffff8087166000908152600560209081526040808320938716835260039093019052908120905b600291828204019190066010025b90546001608060020a036101009290920a90041615801561372a575061ffff80871660009081526005602090815260408083209387168352600390930190522060015b600291828204019190066010025b90546001608060020a036101009290920a900416155b156137885761ffff861660009081526005602052604090206002018054600181016137558382613d5f565b91600052602060002090601091828204019190066002025b815461ffff8088166101009390930a92830292021916179055505b60008213156139125761ffff808716600090815260056020908152604080832093871683526003909301905290812083915b600291828204019190066010025b81546001608060020a036101009290920a808204831690940182168402919093021990921691909117905561ffff808716600090815260056020908152604080832093871683526003909301905220829060015b600291828204019190066010025b81546001608060020a036101009290920a808204831690940182168402919093021990921691909117905561ffff8616600090815260056020526040812083916004909101905b600291828204019190066010025b81546001608060020a036101009290920a808204831690940182168402919093021990921691909117905561ffff86166000908152600560205260409020829060040160015b600291828204019190066010025b8282829054906101000a90046001608060020a03160192506101000a8154816001608060020a0302191690836001608060020a03160217905550613a9e565b61ffff8087166000908152600560209081526040808320938716835260039093019052908120838203915b600291828204019190066010025b81546001608060020a036101009290920a80820483169490940382168402919093021990921691909117905561ffff8087166000908152600560209081526040808320938716835260039093019052908120908390039060015b600291828204019190066010025b81546001608060020a036101009290920a80820483169490940382168402919093021990921691909117905561ffff86166000908152600560205260408120838203916004909101905b600291828204019190066010025b81546001608060020a036101009290920a80820483169490940382168402919093021990921691909117905561ffff86166000908152600560205260408120908390039060040160015b600291828204019190066010025b8282829054906101000a90046001608060020a03160392506101000a8154816001608060020a0302191690836001608060020a031602179055505b33600160a060020a03166000908152600760209081526040918290205482518581524292810192909252825161ffff8a811694888216949190931692600080516020613eb683398151915292918290030190a433600160a060020a03166000908152600760209081526040918290205482518581524292810192909252825161ffff8a8116948882169491909316927fb9391ec3dd39929885998b0c7d6e055589bf5c1fddbd79099da743a20b82252492918290030190a45b600101613493565b5b505050505050565b60408051602081019091526000815290565b60408051602081019091526000815290565b60408051602081019091526000815290565b6060604051908101604052806003905b600081526000199091019060200181613bae5790505090565b60408051602081019091526000815290565b6060604051908101604052806003905b600081526000199091019060200181613bae5790505090565b8154818355818115116123f8576008028160080283600052602060002091820191016123f89190613d99565b5b505050565b82805482825590600052602060002090600f01601090048101928215613ccd5791602002820160005b83821115613c9d57835183826101000a81548161ffff021916908361ffff1602179055509260200192600201602081600101049283019260010302613c5d565b8015613ccb5782816101000a81549061ffff0219169055600201602081600101049283019260010302613c9d565b505b50613cd9929150613e02565b5090565b828054828255906000526020600020908101928215613d18579160200282015b82811115613d18578251825591602001919060010190613cfd565b5b50613cd9929150613e28565b5090565b60408051602081019091526000815290565b60408051602081019091526000815290565b60408051602081019091526000815290565b8154818355818115116123f857600f016010900481600f016010900483600052602060002091820191016123f89190613e28565b5b505050565b6106e691905b80821115613cd957805463ffffffff191681556000613dc16001830182613e6a565b613dcf600283016000613e93565b506000600382018190556004820181905560068201805462ffffff191690556007820155600801613d9f565b5090565b90565b6106e691905b80821115613cd957805461ffff19168155600101613e08565b5090565b90565b6106e691905b80821115613cd95760008155600101613e2e565b5090565b90565b6106e691905b80821115613cd95760008155600101613e2e565b5090565b90565b50805460008255600f016010900490600052602060002090810190613e8f9190613e28565b5b50565b5080546000825590600052602060002090810190613e8f9190613e28565b5b505600f3eb50aadbf0d7c57ec5f56ac9bc98188c5eaf05702012ebfe3698cf182ccb4b08a520c83f3f94e52d4d4b14319f76c4924f0b58aa571d1d8956acc5849651eacca8dbd4ba5afe4571e9544660d61ec920fc8c397d1ccb89154e803057bde225a165627a7a7230582090beb9911bc08ceee3a72eaeb29545aac040eb2dc85d01a41bc48855e00d774d0029';

		this.contractGas = '4700000';

		this.connected = false;
		this.initialized = false;
		this.lastBlockNumber = 0;

		this.self = this;
	}

	isWeb3Available(){
		if(typeof web3 == "undefined") return false;
		return true;
	}

	init(callback){
		var self = this;

		web3.eth.getAccounts(function(err, accs) {
			if (err != null) {
				callback("There was an error fetching your accounts.");
				return;
			}

			if (accs.length == 0) {
				callback("Couldn't get any accounts! Make sure Metamask is configured correctly.");
				return;
			}
		
			self.accounts = accs;
			self.account = self.accounts[0];

			console.log("Extracted accounts: ",self.accounts);
			
			callback();
		});
	}

	deployNewContract(callback) {
		var self = this;

		var obitcoinContract = web3.eth.contract(this.contractAbi);
		this.Obitcoin = obitcoinContract.new(
		{
			from: web3.eth.accounts[0], 
			data: this.contractCompiled, 
			gas: this.contractGas
		}, function (e, contract){
			if(e) callback(e, undefined);
			else if (typeof contract.address !== 'undefined') {
				console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
				console.log(contract);

				self.connected = true;

				callback(e, contract.address);
			}
		});
	}

	connectToContract(address, callback) {

		var obitcoinContract = web3.eth.contract(this.contractAbi);
		
		this.Obitcoin = obitcoinContract.at(address);
		
		var self = this;

		try {
			this.Obitcoin.getContractAddress.call({from: this.account}, function(error, result){
				if(!error){
					if(result==address){
						console.log("Connection successful");
						self.connected = true;
						callback();
					} else {
						callback("Invalid address!");
					}
				}
				else{
					console.error(error);
					callback("There was an error. Reload the page and try again");
				}
			});
		} catch (err){
			callback(err.message);
		}
	}

	disconnect(){
		this.Obitcoin = undefined;
		this.connected = false;
		if(this.events != undefined){
			this.events.stopWatching();
			this.events = undefined;
		}
	}

	isConnected(){
		return this.connected;
	}

	getAccount(){
		return this.account;
	}

	getPools(callback){
		if(!this.isConnected()) return;

		this.Obitcoin.getPools.call({from: this.account}, function(error, result){
			if(!error){
				var data = [];
				result.forEach(res => data.push(res.valueOf()));
				callback(data);
			}
			else
				console.error(error);
		});
	}

	getPool(pool: number, callback: Function){
		if(!this.isConnected()) return;

		var self = this;

		this.Obitcoin.getPool.call(pool, {from: this.account}, function(error, result){
			if(!error){
				if(result[1].length != result[2].length) console.error("Received corrupt data on getPool("+pool+")");

				console.log(result);

				let data : string[] = [];
				let members : number[] = [];
				result[0].forEach(item => data.push(self.hex2a(item)));
				result[1].forEach(res => members.push(res.valueOf()));
				
				let tokens : number[] = [];
				let slices : number[] = [];
				let money : number[] = [];
				if(result[2][0] != undefined){
					if(result[2][0].length != result[2][1].length || result[2][1].length != result[2][2].length) console.error("Received corrupt data on getPool("+pool+")");

					for(var i = 0; i<result[2][0].length; i++){
						tokens[i] = Number(result[2][0][i].valueOf());
						slices[i] = Number(result[2][1][i].valueOf());
						money[i] = Number(result[2][2][i].valueOf());
					}
				}

				callback(data, members, tokens, slices, money);
			}
			else console.error(error);
		});
	}

	getMembers(callback){
		if(!this.isConnected()) return;
		var self = this;

		this.Obitcoin.getMembers.call({from: this.account}, function(error, result){
			if(!error){
				let memberIds : number[] = [];
				let names : string[] = [];
				let addresses : string[] = [];
				let permLevels : number[] = [];

				result[0].forEach(res => memberIds.push(res.valueOf()));
				result[1].forEach(res => names.push(self.hex2a(res)));
				addresses = result[2];
				result[3].forEach(res => permLevels.push(res.valueOf()));

				callback(memberIds, names, addresses, permLevels);
			}
			else
				console.error(error);
		});
	}

	getWholeMembers(callback: Function){
		var members :Member[] = [];
		var self = this;
		this.getMembers(function(memberIds : number[], memberNames : string[], memberAddresses : string[], permLevels : number[]){
			if(memberIds.length==0) callback(members);

			for(var i = 0; i<memberIds.length; i++){
				let member : Member = new Member();

				member.id = memberIds[i];
				member.name = memberNames[i];
				member.address = memberAddresses[i];
				member.permissionLevel = permLevels[i];

				members.push(member);
			}

			callback(members);
		});
	}

	getWholePools(callback: Function){
		var pools: Pool[] = [];
		var self = this;
		this.getPools(function(data: number[]){
			if(data.length==0) callback(pools);

			for(var i = 0; i<data.length; i++){
				self.getWholePool(data[i], function(pool: Pool){
					pools.push(pool);

					if(pools.length == data.length){
						console.log("Loaded pools: ", pools);
						callback(pools);
					}
				});

			}
		});
	}

	getWholePool(id: number, callback: Function){
		var self = this;

		var pool = new Pool();
		pool.id = Number(id);

		pool.tokens = new Map<number, number>();
		pool.slices = new Map<number, number>();
		pool.money = new Map<number, number>();

		this.getPool(id, function(data: string[], members: number[], tokens: number[], slices: number[], money: number[]){
			pool.name = data[0];
			pool.legalContract = data[1];
			pool.financialReports = data[2];

			pool.members = members;

			for(var i = 0; i<members.length; i++){
				pool.tokens[members[i]] = tokens[i];
				pool.slices[members[i]] = slices[i];
				pool.money[members[i]] = money[i];
			}

			callback(pool);		
		});
	}

	addMember(name, address, isAdmin, callback){
		if(!this.isConnected()) return;

		this.Obitcoin.addMember(name, address, isAdmin, {from: this.account}, function(error, result){
			if(!error){
				callback(result);
			}
			else
				console.error(error);
		});
	}

	createDebtPool(name, legalContract, financialReports, callback) {
		if(!this.isConnected()) return;

		this.Obitcoin.createDebtPool(name, legalContract, financialReports, {from: this.account}, function(error, result){
			if(!error)
				callback(result);
			else
				console.error(error);
		});
	}

	updateMember(member, name, address, isAdmin, callback){
		if(!this.isConnected()) return;

		this.Obitcoin.updateMember(member, name, address, isAdmin, {from: this.account}, function(error, result){
			if(!error){
				console.log(result);
				callback(result);
			}
			else
				console.error(error);
		});
	}

	updatePool(pool, name, legalContract, financialReports, callback){
		if(!this.isConnected()) return;

		this.Obitcoin.updateDebtPool(pool, name, legalContract, financialReports, {from: this.account}, function(error, result){
			if(!error){
				console.log(result);
				callback(result);
			}
			else
				console.error(error);
		});
	}

	sendTokens(pools, member, amount, callback){
		if(!this.isConnected()) return;

		this.Obitcoin.sendTokens(pools, member, amount, {from: this.account}, function(error, result){
			if(!error)
				callback(result)
			else
				console.error(error);
		});
	}

	sendTokensBulk(pool, members, amount, callback){
		if(!this.isConnected()) return;

		this.Obitcoin.sendTokensBulk(pool, members, amount, {from: this.account}, function(error, result){
			if(!error)
				callback(result)
			else
				console.error(error);
		});
	}

	buyTokens(pool, amount, callback){
		if(!this.isConnected()) return;

		this.Obitcoin.buyTokens(pool, amount, {from: this.account}, function(error, result){
			if(!error)
				callback(result)
			else
				console.error(error);
		});
	}

	getLastBlockNumber(){
		return this.lastBlockNumber;
	}

	startListeningForEvents(callback){
		if(!this.isConnected()) return;

		var self = this;

		this.lastBlockNumber = web3.eth.getBlockNumber(function(err, result){
			if(err) return;
			self.lastBlockNumber = result;

			self.Obitcoin.getPublishingBlockNumber.call({from: self.account}, function(error, result){

				self.events = self.Obitcoin.allEvents({fromBlock: result.valueOf()});
				self.events.watch(function(err, event) {
					if (err) {
						console.log(err)
						return;
					}
					callback(event);
				});

			});
		});
	}

	hex2a(hexx) { //convert a byte array to string
		var hex = hexx.toString(); //force conversion
		var str = '';
		var int;
		for (var i = 2; i < hex.length; i += 2){
			int = parseInt(hex.substr(i, 2), 16);
			if(int==0) continue;
			str += String.fromCharCode(int);
		}
		return str;
	}
}